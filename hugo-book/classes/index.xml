<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Classes on Doxybook Example</title>
    <link>https://matusnovak.github.io/doxybook/hugo-book/classes/</link>
    <description>Recent content in Classes on Doxybook Example</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://matusnovak.github.io/doxybook/hugo-book/classes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Engine::Assets::Asset</title>
      <link>https://matusnovak.github.io/doxybook/hugo-book/classes/classengine_1_1assets_1_1asset/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://matusnovak.github.io/doxybook/hugo-book/classes/classengine_1_1assets_1_1asset/</guid>
      <description>Engine::Assets::Asset #  Module: An example game engine / Generic assets
#include &amp;lt;Asset.hpp&amp;gt;
Public Classes #      Name     union Event    Public Functions #      Name      Asset(const std::string &amp;amp; name)   virtual ~Asset() =0   virtual void load()Call this method to load the asset.   virtual void unload()Call this method to unload the asset.</description>
    </item>
    
    <item>
      <title>Engine::Assets::Asset::Event</title>
      <link>https://matusnovak.github.io/doxybook/hugo-book/classes/unionengine_1_1assets_1_1asset_1_1event/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://matusnovak.github.io/doxybook/hugo-book/classes/unionengine_1_1assets_1_1asset_1_1event/</guid>
      <description>Engine::Assets::Asset::Event #  Module: An example game engine / Generic assets
#include &amp;lt;Asset.hpp&amp;gt;
Public Classes #      Name     struct Loaded   struct Unloaded   struct Waiting    Public Attributes #      Name     struct Engine::Assets::Asset::Event::Loaded loaded   struct Engine::Assets::Asset::Event::Unloaded unloaded   struct Engine::Assets::Asset::Event::Waiting waiting    Public Attributes Documentation #  variable loaded #  struct Engine::Assets::Asset::Event::Loaded loaded; variable unloaded #  struct Engine::Assets::Asset::Event::Unloaded unloaded; variable waiting #  struct Engine::Assets::Asset::Event::Waiting waiting;  Updated on 2022-11-11 at 02:09:52 +0000</description>
    </item>
    
    <item>
      <title>Engine::Assets::Asset::Event::Loaded</title>
      <link>https://matusnovak.github.io/doxybook/hugo-book/classes/structengine_1_1assets_1_1asset_1_1event_1_1loaded/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://matusnovak.github.io/doxybook/hugo-book/classes/structengine_1_1assets_1_1asset_1_1event_1_1loaded/</guid>
      <description>Engine::Assets::Asset::Event::Loaded #  #include &amp;lt;Asset.hpp&amp;gt;
Public Attributes #      Name     bool success   int usage    Public Attributes Documentation #  variable success #  bool success; variable usage #  int usage;  Updated on 2022-11-11 at 02:09:52 +0000</description>
    </item>
    
    <item>
      <title>Engine::Assets::Asset::Event::Unloaded</title>
      <link>https://matusnovak.github.io/doxybook/hugo-book/classes/structengine_1_1assets_1_1asset_1_1event_1_1unloaded/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://matusnovak.github.io/doxybook/hugo-book/classes/structengine_1_1assets_1_1asset_1_1event_1_1unloaded/</guid>
      <description>Engine::Assets::Asset::Event::Unloaded #  #include &amp;lt;Asset.hpp&amp;gt;
Public Attributes #      Name     bool success    Public Attributes Documentation #  variable success #  bool success;  Updated on 2022-11-11 at 02:09:52 +0000</description>
    </item>
    
    <item>
      <title>Engine::Assets::Asset::Event::Waiting</title>
      <link>https://matusnovak.github.io/doxybook/hugo-book/classes/structengine_1_1assets_1_1asset_1_1event_1_1waiting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://matusnovak.github.io/doxybook/hugo-book/classes/structengine_1_1assets_1_1asset_1_1event_1_1waiting/</guid>
      <description>Engine::Assets::Asset::Event::Waiting #  #include &amp;lt;Asset.hpp&amp;gt;
Public Attributes #      Name     Asset * other The pointer to the other asset this asset is waiting for.    Public Attributes Documentation #  variable other #  Asset * other; The pointer to the other asset this asset is waiting for.
Note: May be null
 Updated on 2022-11-11 at 02:09:52 +0000</description>
    </item>
    
    <item>
      <title>Engine::Audio::AudioBuffer</title>
      <link>https://matusnovak.github.io/doxybook/hugo-book/classes/classengine_1_1audio_1_1audiobuffer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://matusnovak.github.io/doxybook/hugo-book/classes/classengine_1_1audio_1_1audiobuffer/</guid>
      <description>A simple audio buffer to hold PCM samples</description>
    </item>
    
    <item>
      <title>Engine::Audio::AudioBuffer::TypedAudioData</title>
      <link>https://matusnovak.github.io/doxybook/hugo-book/classes/structengine_1_1audio_1_1audiobuffer_1_1typedaudiodata/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://matusnovak.github.io/doxybook/hugo-book/classes/structengine_1_1audio_1_1audiobuffer_1_1typedaudiodata/</guid>
      <description>Use this to populate the buffer.</description>
    </item>
    
    <item>
      <title>Engine::Audio::AudioManager</title>
      <link>https://matusnovak.github.io/doxybook/hugo-book/classes/classengine_1_1audio_1_1audiomanager/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://matusnovak.github.io/doxybook/hugo-book/classes/classengine_1_1audio_1_1audiomanager/</guid>
      <description>An audio manager that accepts multiple Audio::AudioBuffer instances.</description>
    </item>
    
    <item>
      <title>Engine::Exception</title>
      <link>https://matusnovak.github.io/doxybook/hugo-book/classes/classengine_1_1exception/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://matusnovak.github.io/doxybook/hugo-book/classes/classengine_1_1exception/</guid>
      <description>Engine::Exception #  Module: An example game engine
#include &amp;lt;Exception.hpp&amp;gt;
Inherits from exception
Public Functions #      Name      Exception() =default    Exception(std::string msg)   const char * what() const override    Public Functions Documentation #  function Exception #  Exception() =default function Exception #  inline explicit Exception( std::string msg ) function what #  inline const char * what() const override  Updated on 2022-11-11 at 02:09:52 +0000</description>
    </item>
    
    <item>
      <title>Engine::Graphics::Framebuffer</title>
      <link>https://matusnovak.github.io/doxybook/hugo-book/classes/classengine_1_1graphics_1_1framebuffer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://matusnovak.github.io/doxybook/hugo-book/classes/classengine_1_1graphics_1_1framebuffer/</guid>
      <description>Engine::Graphics::Framebuffer #  Module: An example game engine / Graphical related classes
#include &amp;lt;Framebuffer.hpp&amp;gt;
Inherits from Engine::Graphics::Texture, Engine::Graphics::Handle
Public Functions #      Name      Framebuffer(int width, int height)   virtual ~Framebuffer()   virtual int getWidth() const overrideReturns the width of the texture in pixels.   virtual int getHeight() const overrideReturns the height of the texture in pixels.   virtual int getDepth() const overrideReturns the depth of the texture in pixels.</description>
    </item>
    
    <item>
      <title>Engine::Graphics::Handle</title>
      <link>https://matusnovak.github.io/doxybook/hugo-book/classes/classengine_1_1graphics_1_1handle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://matusnovak.github.io/doxybook/hugo-book/classes/classengine_1_1graphics_1_1handle/</guid>
      <description>Engine::Graphics::Handle #  Module: An example game engine / Graphical related classes
#include &amp;lt;Handle.hpp&amp;gt;
Inherited by Engine::Graphics::Texture
Public Functions #      Name      Handle() =default   virtual ~Handle() =default   int getHandle() const    Protected Attributes #      Name     int handle    Public Functions Documentation #  function Handle #  Handle() =default function ~Handle #  virtual ~Handle() =default function getHandle #  inline int getHandle() const Protected Attributes Documentation #  variable handle #  int handle;  Updated on 2022-11-11 at 02:09:52 +0000</description>
    </item>
    
    <item>
      <title>Engine::Graphics::Texture</title>
      <link>https://matusnovak.github.io/doxybook/hugo-book/classes/classengine_1_1graphics_1_1texture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://matusnovak.github.io/doxybook/hugo-book/classes/classengine_1_1graphics_1_1texture/</guid>
      <description>This is a base texture class that serves as a base class for other texture types.</description>
    </item>
    
    <item>
      <title>Engine::Graphics::Texture2D</title>
      <link>https://matusnovak.github.io/doxybook/hugo-book/classes/classengine_1_1graphics_1_1texture2d/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://matusnovak.github.io/doxybook/hugo-book/classes/classengine_1_1graphics_1_1texture2d/</guid>
      <description>Engine::Graphics::Texture2D #  Module: An example game engine / Graphical related classes
#include &amp;lt;Texture2D.hpp&amp;gt;
Inherits from Engine::Graphics::Texture, Engine::Graphics::Handle
Public Functions #      Name      Texture2D(int width, int height, uint8_t * data, Texture::Type type =Texture::Type::RGBA8)   virtual ~Texture2D()   virtual int getWidth() const overrideReturns the width of the texture in pixels.   virtual int getHeight() const overrideReturns the height of the texture in pixels.</description>
    </item>
    
    <item>
      <title>Engine::Graphics::Texture3D</title>
      <link>https://matusnovak.github.io/doxybook/hugo-book/classes/classengine_1_1graphics_1_1texture3d/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://matusnovak.github.io/doxybook/hugo-book/classes/classengine_1_1graphics_1_1texture3d/</guid>
      <description>Some deprecated class.</description>
    </item>
    
    <item>
      <title>Engine::Gui::GuiWidget</title>
      <link>https://matusnovak.github.io/doxybook/hugo-book/classes/classengine_1_1gui_1_1guiwidget/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://matusnovak.github.io/doxybook/hugo-book/classes/classengine_1_1gui_1_1guiwidget/</guid>
      <description>Some generic gui widget class.</description>
    </item>
    
    <item>
      <title>Engine::Utils::ArrayView</title>
      <link>https://matusnovak.github.io/doxybook/hugo-book/classes/classengine_1_1utils_1_1arrayview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://matusnovak.github.io/doxybook/hugo-book/classes/classengine_1_1utils_1_1arrayview/</guid>
      <description>Filesystem path utility functions.</description>
    </item>
    
  </channel>
</rss>